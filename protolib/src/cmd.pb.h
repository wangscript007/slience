// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd.proto

#ifndef PROTOBUF_cmd_2eproto__INCLUDED
#define PROTOBUF_cmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_cmd_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMDImpl();
void InitDefaultsCMD();
inline void InitDefaults() {
  InitDefaultsCMD();
}
}  // namespace protobuf_cmd_2eproto
namespace proto {
class CMD;
class CMDDefaultTypeInternal;
extern CMDDefaultTypeInternal _CMD_default_instance_;
}  // namespace proto
namespace proto {

enum CMD_SvrBase {
  CMD_SvrBase_CMD_SOCKET_CLIENT_IN = 1,
  CMD_SvrBase_CMD_SOCKET_CLIENT_OUT = 2
};
bool CMD_SvrBase_IsValid(int value);
const CMD_SvrBase CMD_SvrBase_SvrBase_MIN = CMD_SvrBase_CMD_SOCKET_CLIENT_IN;
const CMD_SvrBase CMD_SvrBase_SvrBase_MAX = CMD_SvrBase_CMD_SOCKET_CLIENT_OUT;
const int CMD_SvrBase_SvrBase_ARRAYSIZE = CMD_SvrBase_SvrBase_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_SvrBase_descriptor();
inline const ::std::string& CMD_SvrBase_Name(CMD_SvrBase value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_SvrBase_descriptor(), value);
}
inline bool CMD_SvrBase_Parse(
    const ::std::string& name, CMD_SvrBase* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD_SvrBase>(
    CMD_SvrBase_descriptor(), name, value);
}
// ===================================================================

class CMD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CMD) */ {
 public:
  CMD();
  virtual ~CMD();

  CMD(const CMD& from);

  inline CMD& operator=(const CMD& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMD(CMD&& from) noexcept
    : CMD() {
    *this = ::std::move(from);
  }

  inline CMD& operator=(CMD&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMD* internal_default_instance() {
    return reinterpret_cast<const CMD*>(
               &_CMD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMD* other);
  friend void swap(CMD& a, CMD& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMD* New() const PROTOBUF_FINAL { return New(NULL); }

  CMD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMD& from);
  void MergeFrom(const CMD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMD_SvrBase SvrBase;
  static const SvrBase CMD_SOCKET_CLIENT_IN =
    CMD_SvrBase_CMD_SOCKET_CLIENT_IN;
  static const SvrBase CMD_SOCKET_CLIENT_OUT =
    CMD_SvrBase_CMD_SOCKET_CLIENT_OUT;
  static inline bool SvrBase_IsValid(int value) {
    return CMD_SvrBase_IsValid(value);
  }
  static const SvrBase SvrBase_MIN =
    CMD_SvrBase_SvrBase_MIN;
  static const SvrBase SvrBase_MAX =
    CMD_SvrBase_SvrBase_MAX;
  static const int SvrBase_ARRAYSIZE =
    CMD_SvrBase_SvrBase_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SvrBase_descriptor() {
    return CMD_SvrBase_descriptor();
  }
  static inline const ::std::string& SvrBase_Name(SvrBase value) {
    return CMD_SvrBase_Name(value);
  }
  static inline bool SvrBase_Parse(const ::std::string& name,
      SvrBase* value) {
    return CMD_SvrBase_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CMD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_cmd_2eproto::TableStruct;
  friend void ::protobuf_cmd_2eproto::InitDefaultsCMDImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMD

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::CMD_SvrBase> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CMD_SvrBase>() {
  return ::proto::CMD_SvrBase_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2eproto__INCLUDED
