cc_library(
    name = "protobuf_lite",
    srcs = [
        "protobuf/arena.cc",
        "protobuf/arenastring.cc",
        "protobuf/extension_set.cc",
        "protobuf/generated_message_table_driven_lite.cc",
        "protobuf/generated_message_util.cc",
        "protobuf/io/coded_stream.cc",
        "protobuf/io/zero_copy_stream.cc",
        "protobuf/io/zero_copy_stream_impl_lite.cc",
        "protobuf/message_lite.cc",
        "protobuf/repeated_field.cc",
        "protobuf/stubs/atomicops_internals_x86_gcc.cc",
        "protobuf/stubs/atomicops_internals_x86_msvc.cc",
        "protobuf/stubs/bytestream.cc",
        "protobuf/stubs/common.cc",
        "protobuf/stubs/int128.cc",
        "protobuf/stubs/io_win32.cc",
        "protobuf/stubs/once.cc",
        "protobuf/stubs/status.cc",
        "protobuf/stubs/statusor.cc",
        "protobuf/stubs/stringpiece.cc",
        "protobuf/stubs/stringprintf.cc",
        "protobuf/stubs/structurally_valid.cc",
        "protobuf/stubs/strutil.cc",
        "protobuf/stubs/time.cc",
        "protobuf/wire_format_lite.cc",
    ],
	deps = [
        '#pthread'
    ],
	
	warning = 'no',
)

cc_library(
    name = "protobuf",
    srcs = [
        "protobuf/any.cc",
        "protobuf/any.pb.cc",
        "protobuf/api.pb.cc",
        "protobuf/compiler/importer.cc",
        "protobuf/compiler/parser.cc",
        "protobuf/descriptor.cc",
        "protobuf/descriptor.pb.cc",
        "protobuf/descriptor_database.cc",
        "protobuf/duration.pb.cc",
        "protobuf/dynamic_message.cc",
        "protobuf/empty.pb.cc",
        "protobuf/extension_set_heavy.cc",
        "protobuf/field_mask.pb.cc",
        "protobuf/generated_message_reflection.cc",
        "protobuf/generated_message_table_driven.cc",
        "protobuf/io/gzip_stream.cc",
        "protobuf/io/printer.cc",
        "protobuf/io/strtod.cc",
        "protobuf/io/tokenizer.cc",
        "protobuf/io/zero_copy_stream_impl.cc",
        "protobuf/map_field.cc",
        "protobuf/message.cc",
        "protobuf/reflection_ops.cc",
        "protobuf/service.cc",
        "protobuf/source_context.pb.cc",
        "protobuf/struct.pb.cc",
        "protobuf/stubs/mathlimits.cc",
        "protobuf/stubs/substitute.cc",
        "protobuf/text_format.cc",
        "protobuf/timestamp.pb.cc",
        "protobuf/type.pb.cc",
        "protobuf/unknown_field_set.cc",
        "protobuf/util/delimited_message_util.cc",
        "protobuf/util/field_comparator.cc",
        "protobuf/util/field_mask_util.cc",
        "protobuf/util/internal/datapiece.cc",
        "protobuf/util/internal/default_value_objectwriter.cc",
        "protobuf/util/internal/error_listener.cc",
        "protobuf/util/internal/field_mask_utility.cc",
        "protobuf/util/internal/json_escaping.cc",
        "protobuf/util/internal/json_objectwriter.cc",
        "protobuf/util/internal/json_stream_parser.cc",
        "protobuf/util/internal/object_writer.cc",
        "protobuf/util/internal/proto_writer.cc",
        "protobuf/util/internal/protostream_objectsource.cc",
        "protobuf/util/internal/protostream_objectwriter.cc",
        "protobuf/util/internal/type_info.cc",
        "protobuf/util/internal/type_info_test_helper.cc",
        "protobuf/util/internal/utility.cc",
        "protobuf/util/json_util.cc",
        "protobuf/util/message_differencer.cc",
        "protobuf/util/time_util.cc",
        "protobuf/util/type_resolver_util.cc",
        "protobuf/wire_format.cc",
        "protobuf/wrappers.pb.cc",
    ],
    deps = [
		':protobuf_lite',
		'#pthread'
	],
	
	warning = 'no',
)

cc_library(
    name = "protoc_lib",
    srcs = [
        "protobuf/compiler/code_generator.cc",
        "protobuf/compiler/command_line_interface.cc",
        "protobuf/compiler/cpp/cpp_enum.cc",
        "protobuf/compiler/cpp/cpp_enum_field.cc",
        "protobuf/compiler/cpp/cpp_extension.cc",
        "protobuf/compiler/cpp/cpp_field.cc",
        "protobuf/compiler/cpp/cpp_file.cc",
        "protobuf/compiler/cpp/cpp_generator.cc",
        "protobuf/compiler/cpp/cpp_helpers.cc",
        "protobuf/compiler/cpp/cpp_map_field.cc",
        "protobuf/compiler/cpp/cpp_message.cc",
        "protobuf/compiler/cpp/cpp_message_field.cc",
        "protobuf/compiler/cpp/cpp_padding_optimizer.cc",
        "protobuf/compiler/cpp/cpp_primitive_field.cc",
        "protobuf/compiler/cpp/cpp_service.cc",
        "protobuf/compiler/cpp/cpp_string_field.cc",
        "protobuf/compiler/csharp/csharp_doc_comment.cc",
        "protobuf/compiler/csharp/csharp_enum.cc",
        "protobuf/compiler/csharp/csharp_enum_field.cc",
        "protobuf/compiler/csharp/csharp_field_base.cc",
        "protobuf/compiler/csharp/csharp_generator.cc",
        "protobuf/compiler/csharp/csharp_helpers.cc",
        "protobuf/compiler/csharp/csharp_map_field.cc",
        "protobuf/compiler/csharp/csharp_message.cc",
        "protobuf/compiler/csharp/csharp_message_field.cc",
        "protobuf/compiler/csharp/csharp_primitive_field.cc",
        "protobuf/compiler/csharp/csharp_reflection_class.cc",
        "protobuf/compiler/csharp/csharp_repeated_enum_field.cc",
        "protobuf/compiler/csharp/csharp_repeated_message_field.cc",
        "protobuf/compiler/csharp/csharp_repeated_primitive_field.cc",
        "protobuf/compiler/csharp/csharp_source_generator_base.cc",
        "protobuf/compiler/csharp/csharp_wrapper_field.cc",
        "protobuf/compiler/java/java_context.cc",
        "protobuf/compiler/java/java_doc_comment.cc",
        "protobuf/compiler/java/java_enum.cc",
        "protobuf/compiler/java/java_enum_field.cc",
        "protobuf/compiler/java/java_enum_field_lite.cc",
        "protobuf/compiler/java/java_enum_lite.cc",
        "protobuf/compiler/java/java_extension.cc",
        "protobuf/compiler/java/java_extension_lite.cc",
        "protobuf/compiler/java/java_field.cc",
        "protobuf/compiler/java/java_file.cc",
        "protobuf/compiler/java/java_generator.cc",
        "protobuf/compiler/java/java_generator_factory.cc",
        "protobuf/compiler/java/java_helpers.cc",
        "protobuf/compiler/java/java_lazy_message_field.cc",
        "protobuf/compiler/java/java_lazy_message_field_lite.cc",
        "protobuf/compiler/java/java_map_field.cc",
        "protobuf/compiler/java/java_map_field_lite.cc",
        "protobuf/compiler/java/java_message.cc",
        "protobuf/compiler/java/java_message_builder.cc",
        "protobuf/compiler/java/java_message_builder_lite.cc",
        "protobuf/compiler/java/java_message_field.cc",
        "protobuf/compiler/java/java_message_field_lite.cc",
        "protobuf/compiler/java/java_message_lite.cc",
        "protobuf/compiler/java/java_name_resolver.cc",
        "protobuf/compiler/java/java_primitive_field.cc",
        "protobuf/compiler/java/java_primitive_field_lite.cc",
        "protobuf/compiler/java/java_service.cc",
        "protobuf/compiler/java/java_shared_code_generator.cc",
        "protobuf/compiler/java/java_string_field.cc",
        "protobuf/compiler/java/java_string_field_lite.cc",
        "protobuf/compiler/javanano/javanano_enum.cc",
        "protobuf/compiler/javanano/javanano_enum_field.cc",
        "protobuf/compiler/javanano/javanano_extension.cc",
        "protobuf/compiler/javanano/javanano_field.cc",
        "protobuf/compiler/javanano/javanano_file.cc",
        "protobuf/compiler/javanano/javanano_generator.cc",
        "protobuf/compiler/javanano/javanano_helpers.cc",
        "protobuf/compiler/javanano/javanano_map_field.cc",
        "protobuf/compiler/javanano/javanano_message.cc",
        "protobuf/compiler/javanano/javanano_message_field.cc",
        "protobuf/compiler/javanano/javanano_primitive_field.cc",
        "protobuf/compiler/js/js_generator.cc",
        "protobuf/compiler/js/well_known_types_embed.cc",
        "protobuf/compiler/objectivec/objectivec_enum.cc",
        "protobuf/compiler/objectivec/objectivec_enum_field.cc",
        "protobuf/compiler/objectivec/objectivec_extension.cc",
        "protobuf/compiler/objectivec/objectivec_field.cc",
        "protobuf/compiler/objectivec/objectivec_file.cc",
        "protobuf/compiler/objectivec/objectivec_generator.cc",
        "protobuf/compiler/objectivec/objectivec_helpers.cc",
        "protobuf/compiler/objectivec/objectivec_map_field.cc",
        "protobuf/compiler/objectivec/objectivec_message.cc",
        "protobuf/compiler/objectivec/objectivec_message_field.cc",
        "protobuf/compiler/objectivec/objectivec_oneof.cc",
        "protobuf/compiler/objectivec/objectivec_primitive_field.cc",
        "protobuf/compiler/php/php_generator.cc",
        "protobuf/compiler/plugin.cc",
        "protobuf/compiler/plugin.pb.cc",
        "protobuf/compiler/python/python_generator.cc",
        "protobuf/compiler/ruby/ruby_generator.cc",
        "protobuf/compiler/subprocess.cc",
        "protobuf/compiler/zip_writer.cc",
    ],
    deps = [
        ':protobuf',
		'#pthread'
    ],
	warning = 'no',
)

cc_binary(
    name = "protoc",
    srcs = [
		"protobuf/compiler/main.cc"
	],
    deps = [
		':protoc_lib',
		'#pthread'
	],
	warning = 'no',
)
